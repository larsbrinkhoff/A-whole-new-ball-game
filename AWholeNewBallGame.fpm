" bmp.fpm" L

50 CONSTANT FieldOffsetX
50 CONSTANT FieldOffsetY

30 CONSTANT FieldWidth
18 CONSTANT FieldHeight

16 CONSTANT SpriteWidth
16 CONSTANT SpriteHeight

FieldWidth FieldHeight * CONSTANT FieldSize

FieldWidth SpriteWidth * CONSTANT FieldPixelWidth
FieldHeight SpriteHeight * CONSTANT FieldPixelHeight

CREATE GameField[] FieldSize ALLOT
0 GameField[] FieldSize FILL

VARIABLE BallX
VARIABLE BallY
VARIABLE BallDX
VARIABLE BallDY

0 CONSTANT TileSpace // A
1 CONSTANT TileLeftSlashRemovable // B
2 CONSTANT TileRightSlashRemovable // C
3 CONSTANT TileLeftSlash // D
4 CONSTANT TileRightSlash // E
5 CONSTANT TileGoBack // F
6 CONSTANT TileGoRight // G
7 CONSTANT TileGoDown // H
8 CONSTANT TileGoLeft // I
9 CONSTANT TileGoUp // J
10 CONSTANT TileSpaceBlocked // K
11 CONSTANT TileSlime // L
12 CONSTANT TileGoRandom // M
13 CONSTANT TileJump // N
14 CONSTANT TileSpeedUp // O
15 CONSTANT TileSlowDown // P
16 CONSTANT TileGrass // Q
17 CONSTANT TileEnergy // R
18 CONSTANT TileTrap // S
19 CONSTANT TileWall // T
20 CONSTANT TileEraser // U
21 CONSTANT TileLevelStart // V
22 CONSTANT TilesCount

CREATE Sprites[] TilesCount CELLS ALLOT
: Sprite, // index --> index+1
 LOAD-BMP OVER 4 * Sprites[] + ! 1+
;
: StartSpriteLoading 0 ;
: EndSpriteLoading DROP ;

StartSpriteLoading
 " bmp/TileSpace.bmp" Sprite,
 " bmp/TileLeftSlashRemovable.bmp" Sprite,
 " bmp/TileRightSlashRemovable.bmp" Sprite,
 " bmp/TileLeftSlash.bmp" Sprite,
 " bmp/TileRightSlash.bmp" Sprite,
 " bmp/TileGoBack.bmp" Sprite,
 " bmp/TileGoRight.bmp" Sprite,
 " bmp/TileGoDown.bmp" Sprite,
 " bmp/TileGoLeft.bmp" Sprite,
 " bmp/TileGoUp.bmp" Sprite,
 " bmp/TileSpaceBlocked.bmp" Sprite,
 " bmp/TileSlime.bmp" Sprite,
 " bmp/TileGoRandom.bmp" Sprite,
 " bmp/TileJump.bmp" Sprite,
 " bmp/TileSpeedUp.bmp" Sprite,
 " bmp/TileSlowDown.bmp" Sprite,
 " bmp/TileGrass.bmp" Sprite,
 " bmp/TileEnergy.bmp" Sprite,
 " bmp/TileTrap.bmp" Sprite,
 " bmp/TileWall.bmp" Sprite,
 " bmp/TileEraser.bmp" Sprite,
 " bmp/TileLevelStart.bmp" Sprite,
EndSpriteLoading

: DrawSprite // x y index -->
 Sprites[] SWAP -TH @ 
 ROT ROT // addr x y
 SHOW-BMP
;

: EXIT RDROP ;

: DrawTile // x y -->
 DUP 0 < IF DROP DROP EXIT THEN
 DUP FieldHeight 1- > IF DROP DROP EXIT THEN
 OVER 0 < IF DROP DROP EXIT THEN
 OVER FieldWidth 1- > IF DROP DROP EXIT THEN
 OVER OVER FieldWidth * + GameField[] + C@ Sprites[] SWAP -TH @ // x y addr
 ROT SpriteWidth * FieldOffsetX +
 ROT SpriteHeight * FieldOffsetY +
 SHOW-BMP
;

: DrawBorder
 FieldOffsetX 2 - FieldOffsetY 1 - FieldWidth SpriteWidth * 4 + WHITE HLINE
 FieldOffsetX 1 - FieldOffsetY     FieldWidth SpriteWidth * 2 + WHITE HLINE

 FieldOffsetX 2 - FieldHeight SpriteHeight * FieldOffsetY + 1 + FieldWidth SpriteWidth * 4 + WHITE HLINE
 FieldOffsetX 1 - FieldHeight SpriteHeight * FieldOffsetY +     FieldWidth SpriteWidth * 2 + WHITE HLINE

 FieldOffsetX 2 - FieldOffsetY 1 - FieldHeight SpriteHeight * 3 + WHITE VLINE
 FieldOffsetX 1 - FieldOffsetY     FieldHeight SpriteHeight * 1 + WHITE VLINE

 FieldWidth SpriteWidth * FieldOffsetX + 1 + FieldOffsetY 1 - FieldHeight SpriteHeight * 3 + WHITE VLINE
 FieldWidth SpriteWidth * FieldOffsetX +     FieldOffsetY     FieldHeight SpriteHeight * 1 + WHITE VLINE
;

: DrawField
 FieldHeight 0 DO
   FieldWidth 0 DO
   Sprites[] GameField[] IJ + C@ -TH @
   I SpriteWidth * FieldOffsetX +
   J SpriteHeight * FieldOffsetY +
   SHOW-BMP
  LOOP
 LOOP
 FieldOffsetX FieldOffsetY TileLevelStart DrawSprite
;

: DrawBall
 FieldOffsetX BallX @ + FieldOffsetY BallY @ +
 4 0 DO
  OVER OVER I + 4 WHITE HLINE
 LOOP
 DROP DROP
;

: DrawGameField
 DrawBorder
 DrawField
 DrawBall
;

: StartFillingGameField GameField[] ;
: EndFillingGameField DROP ;
: Field, // index str --> index+fieldWidth
 DUP IF // not empty string
  OVER // index str index
  BEGIN
   OVER C@ " A" C@ - OVER C!
   1+ SWAP 1+ SWAP
  OVER C@ NOT UNTIL
  DROP
 THEN
 DROP
 FieldWidth +
;

: LevelA
 StartFillingGameField
 " AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATATAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAATTTTTTTTTRTTTTTTTTTAAAAAA" Field,
 " AAAAAARRRRRRRRRRRRRRRRRAAAAAAA" Field,
 " AAAAATTTTTTTTTRTTTTTTTTTAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATRTAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAATATAAAAAAAAAAAAAA" Field,
 " AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" Field,
 EndFillingGameField
;

: LevelTest
 StartFillingGameField
 " CABAABAAAAAAAAAAAAAAAAAAAAAAAB" Field,
 " AAAAAAAAAAAAAAAAAAAAAAAAAAAABA" Field,
 " BABAACAAAAAAAAAAAAAAAAAAAAABAA" Field,
 " AACAAAAAAAAAAAAAAAAAAAAAAABAAA" Field,
 " AAACAAAAAAAAAAAAAAAAAAAAABAAAA" Field,
 " AAAACAAAAAAAAAAAAAAAAAAABAAAAA" Field,
 " AAAAACAAAAAAAAAAAAAAAAABAAAAAA" Field,
 " AAAAAACAAAAAAAAAAAAAAABAAAAAAA" Field,
 " AAAAAAACAAAAAAAAAAAAABAAAAAAAA" Field,
 " AAAAAAAAAAAAAAAAAAAAACAAAAAAAA" Field,
 " AAAAAAABAAAAAAAAAAAAAACAAAAAAA" Field,
 " AAAAAABAAAAAAAAAAAAAAAACAAAAAA" Field,
 " AAAAABAAAAAAAAAAAAAAAAAACAAAAA" Field,
 " AAAABAAAAAAAAAAAAAAAAAAAACAAAA" Field,
 " AAABAAAAAAAAAAAAAAAAAAAAAACAAA" Field,
 " AABAAAAAAAAAAAAAAAAAAAAAAAACAA" Field,
 " ABAAAAAAAAAAAAAAAAAAAAAAAAAACA" Field,
 " BAAAAAAAAAAAAAAAAAAAAAAAAAAAAC" Field,
 EndFillingGameField
;

VARIABLE NewBallX
VARIABLE NewBallY

: CenterOfTileActions
 GameField[] 
  BallX @ 16 / + 
  BallY @ 16 / FieldWidth * + C@ // tile
 DUP TileLeftSlashRemovable = OVER TileLeftSlash = OR IF
  BallDX @ BallDY @ BallDX ! BallDY !
 THEN 

 DUP TileRightSlashRemovable = OVER TileRightSlash = OR IF
  BallDX @ BallDY @ NEGATE BallDX ! NEGATE BallDY !
 THEN 

 DROP
;

: GameStep
 BallX @ BallDX @ + NewBallX !
 BallY @ BallDY @ + NewBallY !

 NewBallX @ 0 < IF 
  1 BallDX !
  1 NewBallX !
 THEN

 NewBallX @ FieldWidth SpriteWidth * 3 - > IF
  -1 BallDX !
  FieldWidth SpriteWidth * 4 - NewBallX !
 THEN  

 NewBallY @ 0 < IF 
  1 BallDY !
  1 NewBallY !
 THEN

 NewBallY @ FieldHeight SpriteHeight * 3 - > IF
  -1 BallDY !
  FieldHeight SpriteHeight * 4 - NewBallY !
 THEN

 NewBallX @ 15 AND 7 =
 NewBallY @ 15 AND 7 = AND IF
  CenterOfTileActions
 THEN

 NewBallX @ BallX !
 NewBallY @ BallY !
;

: Test
 7 BallX !
 7 BallY !
 1 BallDX !
 0 BallDY !
 LevelTest
 DrawGameField 
 BEGIN
  BallX @ 16 / BallY @ 16 / 
   OVER    OVER    DrawTile
   OVER 1- OVER    DrawTile
   OVER    OVER 1- DrawTile
   OVER 1+ OVER    DrawTile
   OVER    OVER 1+ DrawTile
  DROP DROP
  2 0 DO
   GameStep
  LOOP
  BallX @ 16 / BallY @ 16 / 
   OVER    OVER    DrawTile
   OVER 1- OVER    DrawTile
   OVER    OVER 1- DrawTile
   OVER 1+ OVER    DrawTile
   OVER    OVER 1+ DrawTile  DrawBall
  DROP DROP
  0 0 GOTOXY
  " DEPTH = " PRINT DEPTH .
  $
 AGAIN
;